#!/bin/bash

if [ $(id -u) -eq 0 ]
then
        clear
else
        if echo $(id) |grep sudo > /dev/null
        then
        clear
        echo "Voce não é root"
        echo "Seu usuario esta no grupo sudo"
        echo -e "Para virar root execute \033[1;31msudo su\033[0m"
        pack
        exit
        else
        clear
        echo -e "Vc nao esta como usuario root, nem com seus direitos (sudo)\nPara virar root execute \033[1;31msu\033[0m e digite sua senha root"
        pack
        exit
        fi
        
        
        function configurarsquid(){
clear
cat -n /etc/issue |grep 1 |cut -d' ' -f6,7,8 |sed 's/1//' |sed 's/	//' > /etc/so 
if [ -f /etc/lsb-release ]
then
sistema=$(cat /etc/lsb-release |grep "DISTRIB_DESCRIPTION" | awk -F = '{print $2}' |sed 's/"//g')
else
sistema=Null
fi
echo -e "\033[1;31mPara que la instalacion sea correcta se necesita una ip.
Digite su ip !\033[0m"
read -p ": " ip
clear
echo -e "\033[1;31m-----> \033[01;37mScript VPSPACK  Mnahkl\033[0m"
echo -e "\033[1;31m-----> \033[01;37mSistema:\033[1;31m $sistema"
echo -e "\033[1;31m-----> \033[01;37mSu ip agregada:\033[1;31m $ip"
echo -e "\033[1;31m-----> \033[1;37mSQUID:\033[1;31m 80, 8080, 8799, 3128\033[0m"
echo -e "\033[1;31m-----> \033[1;37mSSH Puertos: \033[1;31m443, 22\033[0m"
echo -e "\033[1;31m-----> \033[1;37mDropbear Puertos: \033[1;31m444\033[0m"
echo -e "\033[1;31m-----> \033[1;37mSSH IPS/Hosts: \033[1;31m$ip, localhost, 127.0.0.1\033[0m"
echo -e "\033[1;31m-----> \033[1;37mHERRAMIENTA PARA AGREGAR HOSTS:\033[1;31m addhost\033[0m"

function sshd_config(){ 

echo '# VPSPack
Port 443
PermitRootLogin yes
PubkeyAuthentication yes
PasswordAuthentication yes
# VPSPack
' >> /etc/ssh/sshd_config
}

function addihost(){ echo '#!/bin/bash
echo -e "\033[1;31mHosts actualmente permitidos\n\n\033[1;32m$(cat /etc/payloads)\n\033[0m"
echo "Que host desea agregar ?"
read -p ": " host
echo "$host" >> /etc/payloads
squid -k reconfigure > /dev/null 2> /dev/null
squid3 -k reconfigure > /dev/null 2> /dev/null
echo "$host Adicionado" ' > /bin/addhost
chmod a+x /bin/addhost
}
function removerhostf(){ echo '#!/bin/bash
echo -e "\033[1;31mHosts actualmente permitidos\n\n\033[1;32m$(cat /etc/payloads)\n\033[0m"
echo -ne "\033[1;37mQue host desea remover: \033[0m"
read host
hosts = $(cat /etc/payloads |grep -v $host)
echo "$hosts" > /etc/payloads
squid -k reconfigure >/dev/null 2>/dev/null
squid3 -k reconfigure >/dev/null 2>/dev/null
echo -e "\n\033[1;32mHost Removido\033[0m"
' > /bin/removerhost
}
function payloads(){ echo ".claro.com.br
.claro.com.sv
.vivo.com.br
.ddivulga.com" > /etc/payloads
}

if cat /etc/so |grep -i ubuntu |grep 16 1> /dev/null 2> /dev/null ; then
echo -e "\033[1;37mConfigurando, Espere...\033[0m"
apt-get update 1> /dev/null 2> /dev/null
apt-get install -y squid3 1> /dev/null 2> /dev/null

service apache2 stop 1> /dev/null 2> /dev/null
chattr -i /etc/ssh/sshd_config > /dev/null 2> /dev/null
sshd_config
service ssh restart 1> /dev/null 2> /dev/null

echo "http_port 80
http_port 8080
http_port 8799
http_port 3128
visible_hostname Deuxblam
acl ip dstdomain $ip
http_access allow ip" > /etc/squid/squid.conf
echo 'acl accept dstdomain -i "/etc/payloads"
http_access allow accept
acl local dstdomain localhost
http_access allow local
acl iplocal dstdomain 127.0.0.1
http_access allow iplocal
http_access deny all' >> /etc/squid/squid.conf

addihost
removerhostf
payloads
service squid restart 1> /dev/null 2> /dev/null
apt-get -y purge dropbear 1> /dev/null 2> /dev/null
apt-get -y install dropbear 1> /dev/null 2> /dev/null
sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbear
sed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=444/g' /etc/default/dropbear
sed -i 's/DROPBEAR_EXTRA_ARGS=/DROPBEAR_EXTRA_ARGS="-p 80"/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells
echo "/usr/sbin/nologin" >> /etc/shells
service ssh restart
service dropbear restart
echo -e "\033[1;37mPara agregar nuevos hosts escriba \033[1;32maddhost
\033[1;37mPara quitar un host escriba \033[1;32mremoverhost\033[1;37m
Los hosts se encuentran en el archivo /etc/payloads\033[0m"
echo -e "\033[01;31mFinalizado !! \033[0m"
echo -e "\033[01;31mPuertos Agregados: \033[0m"
echo -e "\033[01;31mOpenSSH: 22/443 \033[0m"
echo -e "\033[01;31mSquid: 80/8080/8799/3128 \033[0m"
echo -e "\033[01;31mDropbear: 444 \033[0m"
exit 0
fi

if cat /etc/so |grep -i ubuntu 1> /dev/null 2> /dev/null ; then
echo -e "\033[1;37mConfigurando, Espere...\033[0m"
apt-get update 1> /dev/null 2> /dev/null
apt-get install -y squid3 1> /dev/null 2> /dev/null

service apache2 stop 1> /dev/null 2> /dev/null
chattr -i /etc/ssh/sshd_config > /dev/null 2> /dev/null
sshd_config
service ssh restart 1> /dev/null 2> /dev/null

echo "http_port 80
http_port 8080
http_port 8799
http_port 3128
visible_hostname Deuxblam
acl ip dstdomain $ip
http_access allow ip" > /etc/squid3/squid.conf
echo 'acl accept dstdomain -i "/etc/payloads"
http_access allow accept
acl local dstdomain localhost
http_access allow local
acl iplocal dstdomain 127.0.0.1
http_access allow iplocal
http_access deny all' >> /etc/squid3/squid.conf
payloads
service squid3 restart 1> /dev/null 2> /dev/null
addihost
removerhostf
apt-get -y purge dropbear 1> /dev/null 2> /dev/null
apt-get -y install dropbear 1> /dev/null 2> /dev/null
sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbear
sed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=444/g' /etc/default/dropbear
sed -i 's/DROPBEAR_EXTRA_ARGS=/DROPBEAR_EXTRA_ARGS="-p 8080"/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells
echo "/usr/sbin/nologin" >> /etc/shells
service ssh restart
service dropbear restart
echo -e "\033[1;37mPara agregar nuevos hosts, teclee \033[1;32maddhost
\033[1;37mPara para eliminar hosts teclee \033[1;32mremoverhost\033[1;37m
O eliminelos en el archivo /etc/payloads\033[0m"
echo -e "\033[01;31mEl script ha sido instalado, cree un usuario de prueba !! \033[0m"
echo -e "\033[01;31mPuertos Agregados: \033[0m"
echo -e "\033[01;31mOpenSSH: 22/443 \033[0m"
echo -e "\033[01;31mSquid: 80/8080/8799/3128 \033[0m"
echo -e "\033[01;31mDropbear: 444 \033[0m"
exit 0
fi

if cat /etc/so |grep -i centos 1> /dev/null 2> /dev/null ; then
echo -e "\033[01;37mConfigurando, Espere...\033[0m"
yum -y update 1> /dev/null 2> /dev/null
yum install -y squid 1> /dev/null 2> /dev/null

service httpd stop 1> /dev/null 2> /dev/null
chattr -i /etc/ssh/sshd_config > /dev/null 2> /dev/null
sshd_config
service sshd restart 1> /dev/null 2> /dev/null

echo "http_port 80
http_port 8080
http_port 8799
http_port 3128
visible_hostname Deuxblam
acl ip dstdomain $ip
http_access allow ip" > /etc/squid/squid.conf
echo 'acl accept dstdomain -i "/etc/payloads"
http_access allow accept
acl local dstdomain localhost
http_access allow local
acl iplocal dstdomain 127.0.0.1
http_access allow iplocal
http_access deny all' >> /etc/squid/squid.conf
payloads
service squid restart 1> /dev/null 2> /dev/null
addihost
removerhostf
echo -e "\033[1;37mPara agregar nuevos hosts teclee \033[1;32maddhost
\033[1;37mPara remover ejecute el comando \033[1;32mremoverhost\033[1;37m
O modifique el archivo /etc/payloads\033[0m"
echo -e "\033[01;31mFinaliza, cree un usuario de prueba !! \033[0m"
echo -e "\033[01;31mPuertos Agregados: \033[0m"
echo -e "\033[01;31mOpenSSH: 22/443 \033[0m"
echo -e "\033[01;31mSquid: 80/8080/8799/3128 \033[0m"
echo -e "\033[01;31mDropbear: 444 \033[0m"
exit
fi

if cat /etc/so |grep -i debian 1> /dev/null 2> /dev/null ; then
echo -e "\033[01;37mConfigurando, Espere...\033[0m"
apt-get update 1> /dev/null 2> /dev/null
apt-get install -y squid3 1> /dev/null 2> /dev/null
service apache2 stop 1> /dev/null 2> /dev/null
chattr -i /etc/ssh/sshd_config > /dev/null 2> /dev/null
sshd_config

service ssh restart 1> /dev/null 2> /dev/null

echo "http_port 80
http_port 8080
http_port 8799
http_port 3128
visible_hostname Deuxblam
acl ip dstdomain $ip
http_access allow ip" > /etc/squid3/squid.conf
echo 'acl accept dstdomain -i "/etc/payloads"
http_access allow accept
acl local dstdomain localhost
http_access allow local
acl iplocal dstdomain 127.0.0.1
http_access allow iplocal
http_access deny all' >> /etc/squid3/squid.conf
payloads
service squid3 restart 1> /dev/null 2> /dev/null
addihost
removerhostf
apt-get -y purge dropbear 1> /dev/null 2> /dev/null
apt-get -y install dropbear 1> /dev/null 2> /dev/null
sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbear
sed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=444/g' /etc/default/dropbear
sed -i 's/DROPBEAR_EXTRA_ARGS=/DROPBEAR_EXTRA_ARGS="-p 8080"/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells
echo "/usr/sbin/nologin" >> /etc/shells
service ssh restart
service dropbear restart
echo -e "\033[1;37mPara agregar nuevos hosts teclee \033[1;32maddhost
\033[1;37mPara remover ejecute el comandoo \033[1;32mremoverhost\033[1;37m
O modifique el archivo /etc/payloads\033[0m"
echo -e "\033[01;31mFinalizado, cree un usuario de prueba !! \033[0m"
echo -e "\033[01;31mPuertos Agregados: \033[0m"
echo -e "\033[01;31mOpenSSH: 22/443 \033[0m"
echo -e "\033[01;31mSquid: 80/8080/8799/3128 \033[0m"
echo -e "\033[01;31mDropbear: 444 \033[0m"
exit 0
fi
if cat /etc/issue |grep -i kernel 1> /dev/null 2> /dev/null ; then
echo -e "\033[01;31mConfigurando, Espere...\033[0m"
yum -y update 1> /dev/null 2> /dev/null
yum install -y squid 1> /dev/null 2> /dev/null

service httpd stop 1> /dev/null 2> /dev/null
chattr -i /etc/ssh/sshd_config > /dev/null 2> /dev/null
sshd_config
service sshd restart 1> /dev/null 2> /dev/null

echo "http_port 80
http_port 8080
http_port 8799
http_port 3128
visible_hostname Deuxblam
acl ip dstdomain $ip
http_access allow ip" > /etc/squid/squid.conf
echo 'acl accept dstdomain -i "/etc/payloads"
http_access allow accept
acl local dstdomain localhost
http_access allow local
acl iplocal dstdomain 127.0.0.1
http_access allow iplocal
http_access deny all' >> /etc/squid/squid.conf
payloads
service squid restart 1> /dev/null 2> /dev/null
addihost
removerhostf
apt-get -y purge dropbear 1> /dev/null 2> /dev/null
apt-get -y install dropbear 1> /dev/null 2> /dev/null
sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbear
sed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=444/g' /etc/default/dropbear
sed -i 's/DROPBEAR_EXTRA_ARGS=/DROPBEAR_EXTRA_ARGS="-p 8080"/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells
echo "/usr/sbin/nologin" >> /etc/shells
service ssh restart
service dropbear restart
echo -e "\033[1;37mPara agregar nuevos hosts teclee \033[1;32maddhost
\033[1;37mPara remover execute el comando \033[1;32mremoverhost\033[1;37m
O mofifique el archivo /etc/payloads\033[0m"
echo -e "\033[01;31mFinalizado, cree un usuario de prueba !! \033[0m"
echo -e "\033[01;31mPuertos Agregados: \033[0m"
echo -e "\033[01;31mOpenSSH: 22/443 \033[0m"
echo -e "\033[01;31mSquid: 80/8080/8799/3128 \033[0m"
echo -e "\033[01;31mDropbear: 444 \033[0m"
exit
fi
echo -e "\033[01;31mConfigurando, Espere...\033[0m"
yum -y update 1> /dev/null 2> /dev/null
yum install -y squid 1> /dev/null 2> /dev/null
apt-get update > /dev/null 2> /dev/null
apt-get install -y squid3 > /dev/null 2>/dev/null
service httpd stop 1> /dev/null 2> /dev/null
service apache2 stop >/dev/null 2> /dev/null
chattr -i /etc/ssh/sshd_config > /dev/null 2> /dev/null
sshd_config
service sshd restart 1> /dev/null 2> /dev/null
service ssh restart > /dev/null 2> /dev/null
echo "http_port 80
http_port 8080
http_port 8799
http_port 3128
visible_hostname Deuxblam
acl ip dstdomain $ip
http_access allow ip" > /etc/squid*/squid.conf
echo 'acl accept dstdomain -i "/etc/payloads"
http_access allow accept
acl local dstdomain localhost
http_access allow local
acl iplocal dstdomain 127.0.0.1
http_access allow iplocal
http_access deny all' >> /etc/squid*/squid.conf
payloads
service squid restart 1> /dev/null 2> /dev/null
service squid3 restart > /dev/null 2> /dev/null
addihost
removerhostf
apt-get -y purge dropbear 1> /dev/null 2> /dev/null
apt-get -y install dropbear 1> /dev/null 2> /dev/null
sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbear
sed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=444/g' /etc/default/dropbear
sed -i 's/DROPBEAR_EXTRA_ARGS=/DROPBEAR_EXTRA_ARGS="-p 8080"/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells
echo "/usr/sbin/nologin" >> /etc/shells
service ssh restart
service dropbear restart
echo -e "\033[1;37mPara agregar nuevos hosts teclee \033[1;32maddhost
\033[1;37mPara remover ejecute el comando \033[1;32mremoverhost\033[1;37m
O modifique el archivo /etc/payloads\033[0m"
echo -e "\033[01;31mFinalizado, cree un usuario de prueba!! \033[0m"
echo -e "\033[01;31mPuertos Agregados: \033[0m"
echo -e "\033[01;31mOpenSSH: 22/443 \033[0m"
echo -e "\033[01;31mSquid: 80/8080/8799/3128 \033[0m"
echo -e "\033[01;31mDropbear: 444 \033[0m"
}

if [ -d /etc/VpsPackdir ]
then
echo ""
else
mkdir /etc/VpsPackdir
fi

if [ -d /etc/VpsPackdir/senha ]
then
echo ""
else
mkdir /etc/VpsPackdir/senha
fi

if [ -d /etc/VpsPackdir/limite ]
then
echo ""
else
mkdir /etc/VpsPackdir/limite
fi

if [ -d /etc/VpsPackdir/date ]
then
echo ""
else
mkdir /etc/VpsPackdir/date
fi

if [ -d /etc/VpsPackdir/UsuariosADM ]
then
echo ""
else
mkdir /etc/VpsPackdir/UsuariosADM
fi
clear
echo -e "\033[1;37m VpsPacket © Script criado por: \033[2;32mManahkl \033[0m"
echo -e "\033[1;37mEscolha uma das opçoẽs:    \033[1;37mPara Sair Ctrl + C\033[1;34m
[1] CrearUsuario \033[2;36m(Criar usuarios para SSH e OpenVPN)\033[1;34m
[2] RedefinirUsuario\033[2;36m(Opções para mudanças no usuario)\033[1;34m
[3] transferirusuarios \033[2;36m(Copiar usuarios para outros servidores)\033[1;34m
[4] detalleusuario \033[2;36m(Mostra informações de um unico usuario !!)\033[1;34m
[5] detalleusuarios \033[2;36m(Mostra informações dos usuarios ativos !!)\033[1;34m
[6] Usserinactivos \033[2;36m(Mostra informações dos usuarios inativos!!)\033[1;34m
[7] speedtest \033[2;36m(Teste de conexão [velocidade de banda])\033[1;34m
[8] Trafego \033[2;36m(Mostrar trafego da rede em tempo real)\033[1;34m
[9] systemdetalhes \033[2;36m(Detalhes sobre o Sistema)\033[1;34m
[10] graphicsystem \033[2;36m(Detalhes sobre o VpsPack)\033[1;34m
[11] Ayuda \033[2;36m(Mostrar um grafico com informações do sistema)\033[1;34m
[12] Mais \033[2;36m(Mostrar mais opções)\033[0m"
[\033[1;30m01\033[1;33m] Configurar_Squid_SSH_Dropbear \033[1;30m(Configuracion Squid, OpenSSH y Dropbear)\033[1;33m
read -p "[1-10]: " opcao

case $opcao in
 1)
  Usercreate
  read -n1 -r -p " Presione una tecla para Abrir nuevamente  VpsPack..."
  VpsPack;;
 2)
  UserRedefine
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
 3)
  transferirusers
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
 4)
  detalhesuser
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
 5)
  detalhesusers
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
  6)
  Usersinative
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
 7)
  speedtest
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
 8)
  nbwmon
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
 9)
  systemdetalhes
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
 10)
  htop
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
 11)
  Ajuda
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
 12)
  Mais
  read -n1 -r -p " Pressione uma tecla para Abrir novamente o VpsPack..."
  VpsPack;;
  13)
  configurarsquid;;
 *)
  id > /dev/null 2> /dev/null
esac
  VpsPack;;
 *)
  id > /dev/null 2> /dev/null
esac
